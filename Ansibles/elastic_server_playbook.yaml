---
- name: Installing the elastic search
  hosts: all
  tasks:
    # Install elasticsearch
    - name: Add the elasticsearch repository to apt
      ansible.builtin.apt_key:
        url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
        state: present
      become: true

    - name: Install elasticsearch
      ansible.builtin.apt:
        name: elasticsearch=8.7.1
        update_cache: true
      become: true


#    - name: copy elasticsearch.yml to set the fs repo used by the snapshots
#      ansible.builtin.copy:
#        src: elasticsearch.yml
#        dest: /etc/elasticsearch/elasticsearch.yml
#        owner: elasticsearch
#        mode: '0775'
#      become: true

    # Start and enable elasticsearch
    - name: enable elasticsearch.service
      ansible.builtin.systemd:
        name: elasticsearch
        daemon_reload: true
        enabled: true
      become: true

    - name: start elasticsearch.service
      ansible.builtin.systemd:
        name: elasticsearch
        state: started
      become: true

    # Get current password
    - name: get password in stdout
      ansible.builtin.shell: echo y | bin/elasticsearch-reset-password -b -s -u elastic
      args:
        chdir: /usr/share/elasticsearch
      become: true
      register: passwordChange

    # reset elastic user password via api
    - name: change password via api
      ansible.builtin.uri:
        url: https://localhost:9200/_security/user/elastic/_password
        method: POST
        headers:
          Content-Type: "application/json"
          Authorization: 'Basic {{ ("elastic:" + (passwordChange.stdout_lines.0)) | ansible.builtin.b64encode}}'
        validate_certs: false
        body_format: json
        body:
          password: "{{ elastic_password }}"

    # add line to elastic.yml
    - name: add path.repo line to elasticsearch.yml
      lineinfile:
        state: present
        path: /etc/elasticsearch/elasticsearch.yml
        line: 'path.repo: /mnt/backups/my_fs_backup_location'
      become: true


    # copy kibana service token
    - name: copy service tokens
      ansible.builtin.copy:
        src: FilesElasticSearch/service_token
        dest: /etc/elasticsearch/service_tokens
        owner: elasticsearch
        mode: '0775'
        #remote_src: yes
      become: true

    - name: copy http_ca.crt file
      ansible.builtin.copy:
        src: FilesElasticSearch/http_ca.crt
        dest: /etc/elasticsearch/certs/http_ca.crt
        owner: elasticsearch
        mode: '0775'
        # remote_src: yes
      become: true

    # setting up directories for the snapshots
    - name: create backups directory
      ansible.builtin.file:
        path: /mnt/backups
        state: directory
        owner: elasticsearch
        mode: '0775'
      become: true

    - name: copy the backups directory
      ansible.builtin.copy:
        src: my_fs_backup_location
        dest: /mnt/backups
#        remote_src: yes
        owner: elasticsearch
        mode: '0775'
      become: true

    - name: restart elasticsearch.service
      ansible.builtin.systemd:
        name: elasticsearch
        state: restarted
      become: true

    # Set up the kibana snapshot and restore to it
    - name: register the directory in elastic
      ansible.builtin.uri:
        url: https://localhost:9200/_snapshot/my_fs_backup
        method: PUT
        headers:
          Content-Type: "application/json"
          Authorization: 'Basic {{ ("elastic:" + elastic_password) | ansible.builtin.b64encode}}'
        validate_certs: false
        body_format: json
        body:
          type: "fs"
          settings:
            location: "/mnt/backups/my_fs_backup_location"

    - name: restore to the snapshot inside the directory
      ansible.builtin.uri:
        url: https://localhost:9200/_snapshot/my_fs_backup/snapshot_kibana/_restore
        method: POST
        headers:
          Content-Type: "application/json"
          Authorization: 'Basic {{ ("elastic:" + elastic_password) | ansible.builtin.b64encode}}'
        validate_certs: false
        body_format: json
        body:
          indices: ".kibana*"