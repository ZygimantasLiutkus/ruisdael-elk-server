---
- name: Installing the monitoring software
  hosts: all
  tasks:
    # Install and configure Kibana
    - name: Add the beats repository to apt
      ansible.builtin.apt_key:
        url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
        state: present
      become: true

    - name: Install kibana
      ansible.builtin.apt:
        name: kibana
      become: true

    - name: Edit the kibana.yml to link up with elastic search
      template:
        src: kibana.yml.j2
        dest: /etc/kibana/kibana.yml
      become: true

    - name: execute a daemon reload
      ansible.builtin.systemd:
        daemon_reload: true
      become: true

    - name: enable the kibana
      ansible.builtin.systemd:
        name: kibana
        enabled: true
      become: true

    - name: start the kibana
      ansible.builtin.systemd:
        name: kibana
        state: started
      become: true

    # Install and configure nginx

    - name: Install nginx
      ansible.builtin.apt:
        name: nginx
      become: true

    - name: Add a guest user with the viewer role
      ansible.builtin.uri:
        url: https://{{ elastic_url }}:9200/_security/user/{{ guest_user }}
        method: POST
        headers:
          Content-Type: "application/json"
          Authorization: 'Basic {{ ("elastic:" + elastic_password) | ansible.builtin.b64encode}}'
        validate_certs: false
        body_format: json
        body:
          password : "{{ guest_password }}"
          roles : '[ "viewer" ]'

    - name: Add a nginx configuration to create access to kibana via port 8050
      template:
        src: kibana.conf.j2
        dest: /etc/nginx/conf.d/kibana.conf
      become: true

    - name: restart nginx
      ansible.builtin.systemd:
        name: nginx
        state: restarted
      become: true

    # install and execute our dashboard

    - name: clone the git repository
      git:
        repo: https://{{token_name}}:{{git_access_token}}@{{gitlab_address}}
        dest: /bin/dashboard
      become: true

    - name: Install JDK
      ansible.builtin.apt:
        name: openjdk-17-jdk
        update_cache: true
      become: true

    - name: Create a gradle directory if it does not exist
      ansible.builtin.file:
        path: /opt/gradle
        state: directory
        mode: '0755'
      become: true

    - name: Install unzip
      ansible.builtin.apt:
        name: unzip
      become: true

    - name: Install gradle
      unarchive:
        src: https://services.gradle.org/distributions/gradle-8.1.1-bin.zip
        dest: /opt/gradle
        remote_src: yes
      become: true

    - name: Add gradle to PATH
      copy:
        content: "export PATH=$PATH:/opt/gradle/gradle-8.1.1/bin"
        dest: "/etc/profile.d/custom-path.sh"
      become: true

    - name: build with gradle
      ansible.builtin.shell: /opt/gradle/gradle-8.1.1/bin/gradle bootJar
      args:
        chdir: /bin/dashboard
      become: true

    # add the dashboard as a service and run it
    - name: create service to execute the dashboard
      template:
        src: dashboard.service.j2
        dest: /etc/systemd/system/dashboard.service
      become: true

    - name : enable the service
      ansible.builtin.systemd:
        name: dashboard
        enabled: true
      become: true

    - name: start the service
      ansible.builtin.systemd:
        name: dashboard
        state: started
      become: true
...