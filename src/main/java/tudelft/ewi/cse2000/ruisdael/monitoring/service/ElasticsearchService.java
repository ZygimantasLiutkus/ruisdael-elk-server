package tudelft.ewi.cse2000.ruisdael.monitoring.service;

import co.elastic.clients.elasticsearch.ElasticsearchClient;
import co.elastic.clients.elasticsearch.core.SearchResponse;
import co.elastic.clients.elasticsearch.core.search.Hit;
import java.util.List;
import java.util.Map;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

/**
 * Service class for Elasticsearch operations.
 */
@Service
public class ElasticsearchService {

    private final ElasticsearchClient client;

    /**
     * Constructs an instance of ElasticsearchService with the specified Elasticsearch client.
     *
     * @param client The ElasticsearchClient dependency injected automatically by the Spring framework.
     */
    @Autowired
    public ElasticsearchService(ElasticsearchClient client) {
        this.client = client;
    }

    /**
     * Retrieves a list of distinct index names generated by the monitoring software.
     *
     * @return A list of distinct index names.
     */
    public List<String> getDistinctIndexNames() {
        try {
            SearchResponse<Map> response = client.search(s -> s
                    .index("metric_clone*"), Map.class);

            List<String> indices = response
                    .hits().hits()
                    .stream().map(Hit::index)
                    .distinct()
                    .toList();

            return indices;
        } catch (Exception e) {
            e.printStackTrace();
            return List.of();
        }
    }

}
