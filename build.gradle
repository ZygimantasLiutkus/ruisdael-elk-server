plugins {
	id 'java'
	id 'jacoco'
	id 'checkstyle'
	id 'pmd'
	id 'info.solidsoft.pitest' version '1.9.0'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'tudelft.ewi.cse2000.ruisdael.monitoring'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

bootJar {
	archiveFileName = "${archiveBaseName.get()}.${archiveExtension.get()}"
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	implementation 'org.webjars:webjars-locator-core'
	implementation 'org.webjars:sockjs-client:1.0.2'
	implementation 'org.webjars:stomp-websocket:2.3.3'
	implementation 'co.elastic.clients:elasticsearch-java:8.8.0'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.7.1'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation('org.junit.jupiter:junit-jupiter:5.9.3')
	testImplementation "org.mockito:mockito-core:5.3.1"
	testImplementation 'org.springframework.security:spring-security-test'
}

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
	finalizedBy jacocoTestReport
}

checkstyle {
	toolVersion "8.25"
	configFile = rootProject.file('config/checkstyle.xml')

	ignoreFailures = false
	maxErrors = 0
	maxWarnings = 0
}

pmd {
	incrementalAnalysis = true
	ruleSetFiles = files("${rootDir}/config/pmd-exclusions.xml")
	ruleSets = []
}

jacoco {
	toolVersion = "0.8.8"
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = false
		csv.required = false
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.5
			}
		}

		rule {
			enabled = true
			element = 'CLASS'
			includes = ['tudelft.ewi.cse2000.ruisdael.monitoring.*']

			limit {
				counter = 'BRANCH'
				value = 'COVEREDRATIO'
				minimum = 0.1
			}
		}
	}
}

pitest {
	junit5PluginVersion = '1.0.0'
	targetClasses = ['tudelft.ewi.cse2000.ruisdael.monitoring.*']  //by default "${project.group}.*"
	pitestVersion = '1.9.0' //not needed when a default PIT version should be used
	threads = 4
	outputFormats = ['HTML']
	timestampedReports = false
}